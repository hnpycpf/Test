<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.edataserver.dao.ModularMapper">
  <resultMap id="BaseResultMap" type="org.edataserver.model.Modular">
    <id column="modular_id" jdbcType="VARCHAR" property="modularId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="modular_name" jdbcType="VARCHAR" property="modularName" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Base_Column_List">
    modular_id, user_id, user_type, modular_name, createtime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from modular
    where modular_id = #{modularId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from modular
    where modular_id = #{modularId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.edataserver.model.Modular">
    insert into modular (modular_id, user_id, user_type, 
      modular_name, createtime)
    values (#{modularId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, 
      #{modularName,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.edataserver.model.Modular">
    insert into modular
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="modularId != null">
        modular_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="modularName != null">
        modular_name,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="modularId != null">
        #{modularId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="modularName != null">
        #{modularName,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.edataserver.model.Modular">
    update modular
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="modularName != null">
        modular_name = #{modularName,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where modular_id = #{modularId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.edataserver.model.Modular">
    update modular
    set user_id = #{userId,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      modular_name = #{modularName,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where modular_id = #{modularId,jdbcType=VARCHAR}
  </update>

	<!-- getAllStandards -->
    <select id="getAllStandards" resultType="map">
         SELECT standard_number,standard_name,standard_id FROM teststandard 
   
       <!--  SELECT standardNumber,standardName,standardId FROM teststandard -->
    </select>
<!--     <insert id="input"   parameterType="com.wh.springboot.entity.User">
        insert into admin
        (username,password,phone,power)
        values
        (
          #{username},
          #{password},
          #{phone},
          #{power}
        )
    </insert>


    <update id="updatePassword">
        update admin set password=#{password} where username=#{username}
    </update> -->

</mapper>